{"version":3,"sources":["assets/salesfoo.png","components/CommonComponents/FullpageLoader.js","components/Layout/index.js","components/App.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/index.js","redux/types.js","redux/store.js","index.js"],"names":["module","exports","FullpageLoader","Box","position","top","left","height","width","style","backgroundColor","zIndex","transform","LinearProgress","color","ButtonGroup","Button","variant","size","startIcon","Save","Delete","useStyles","makeStyles","theme","root","display","appBar","drawer","background","flexShrink","drawerPaper","palette","primary","main","drawerContainer","overflow","content","flexGrow","padding","spacing","toolbar","paddingLeft","paddingRight","whiteIcon","margin","marginTop","marginBottom","blackIcon","marginRight","menuIcon","marginLeft","navLogo","Index","children","classes","className","CssBaseline","AppBar","Toolbar","src","salesfooLogo","Avatar","alt","Drawer","paper","List","ListItem","button","connect","state","fallback","Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","isAuthenticated","user","combineReducers","auth","action","type","payload","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","createMuiTheme","secondary","typography","fontFamily","fontSize","ReactDOM","render","ThemeProvider","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.59fd1e02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/salesfoo.c9a0cbf9.png\";","import React, { Fragment } from \"react\";\nimport { LinearProgress, Box,Button,\n  ButtonGroup, } from \"@material-ui/core\";\n\nimport { Save, Delete } from '@material-ui/icons';\n\nexport default function FullpageLoader() {\n  return (\n    <Fragment>\n      <Box\n        position=\"fixed\"\n        top=\"0\"\n        left=\"0\"\n        height=\"100vh\"\n        width=\"100vw\"\n        style={{ backgroundColor: \"rgba(0, 0, 0, 0.5)\", zIndex: \"99\" }}\n      ></Box>\n      <Box\n        position=\"fixed\"\n        top=\"50%\"\n        left=\"50%\"\n        style={{ transform: \"translate(-50%, -50%)\", zIndex: \"100\" }}\n      >\n        <LinearProgress color=\"secondary\" />\n      </Box>\n      <Box height={300}></Box>\n      <ButtonGroup>\n        <Button\n          variant='contained'\n          color='primary'\n          size='large'\n          startIcon={<Save />}\n        >\n          Save\n        </Button>\n        <Button\n          variant='contained'\n          color='secondary'\n          size='large'\n          startIcon={<Delete />}\n        >\n          Discard\n        </Button>\n      </ButtonGroup>\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport salesfooLogo from \"../../assets/salesfoo.png\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\";\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\nimport MenuOutlinedIcon from \"@material-ui/icons/MenuOutlined\";\nimport NotificationsOutlinedIcon from \"@material-ui/icons/NotificationsOutlined\";\nimport MoreVertOutlinedIcon from \"@material-ui/icons/MoreVertOutlined\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    background: \"#f0f2f5\",\n  },\n  drawer: {\n    width: 104,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 104,\n    background: theme.palette.primary.main,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n    color: \"white\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n  },\n  toolbar: {\n    paddingLeft: 10,\n    paddingRight: 45,\n    height: 100,\n  },\n  whiteIcon: {\n    color: \"white\",\n    margin: \"auto\",\n    marginTop: 15,\n    marginBottom: 15,\n  },\n  blackIcon: {\n    color: \"black\",\n    marginRight: 15,\n  },\n  menuIcon: {\n    color: \"black\",\n    marginRight: 20,\n    marginLeft: 30,\n  },\n  navLogo: {\n    width: 218,\n    height: 65,\n    marginRight: \"auto\",\n  },\n}));\n\nconst Index = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <img src={salesfooLogo} className={classes.navLogo} />\n          <PersonRoundedIcon className={classes.blackIcon} />\n          <SearchOutlinedIcon className={classes.blackIcon} />\n          <MenuOutlinedIcon className={classes.blackIcon} />\n          <NotificationsOutlinedIcon className={classes.blackIcon} />\n          <MoreVertOutlinedIcon className={classes.menuIcon} />\n          <Avatar alt=\"Sales\" src=\"\" />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            <ListItem button>\n              <HomeRoundedIcon className={classes.whiteIcon} />\n            </ListItem>\n            <ListItem button>\n              <SettingsRoundedIcon className={classes.whiteIcon} />\n            </ListItem>\n            <ListItem button>\n              <PersonRoundedIcon className={classes.whiteIcon} />\n            </ListItem>\n            <ListItem button>\n              <ImageOutlinedIcon className={classes.whiteIcon} />\n            </ListItem>\n            <ListItem button>\n              <AccountCircleOutlinedIcon className={classes.whiteIcon} />\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { useEffect, lazy, Suspense } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { FullpageLoader } from \"./CommonComponents\";\nimport Layout from \"../components/Layout\";\n\n// const Home = lazy(() => import(\"./Home\"));\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Suspense fallback={<FullpageLoader />}>\n        <Switch>\n          <Layout>\n            <p>React-Redux Boiler Plate</p>\n          </Layout>\n          {/* <Route exact path=\"/\" render={{}} /> */}\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, {})(App);\n","const isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_CURRENT_USER } from \"../types\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n});\r\n","export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleWare),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#082E52\" },\n    secondary: { main: \"#7a7a7a\" },\n  },\n  typography: {\n    fontFamily: \"Montserrat\",\n    color: \"black\",\n    fontSize: 13,\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.register();\n"],"sourceRoot":""}